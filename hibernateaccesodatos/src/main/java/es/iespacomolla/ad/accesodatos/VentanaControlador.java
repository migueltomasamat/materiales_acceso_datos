/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package es.iespacomolla.ad.accesodatos;

import es.iespacomolla.ad.exceptions.DAOConexionExcepcion;
import es.iespacomolla.ad.exceptions.DAOEquipoExcepcion;
import es.iespacomolla.ad.hibernateaccesodatos.Equipo;
import es.iespacomolla.ad.hibernateaccesodatos.Jugador;
import java.awt.Color;
import java.awt.Component;
import java.awt.Rectangle;
import java.awt.event.ComponentEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.text.DateFormat;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.Date;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.JTabbedPane;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.plaf.TabbedPaneUI;
import javax.swing.plaf.basic.BasicTabbedPaneUI;
import javax.swing.text.DateFormatter;
import org.jdesktop.swingx.JXDatePicker;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author miguel
 */
public class VentanaControlador extends javax.swing.JFrame implements WindowListener{

    /**
     * Creates new form VentanaControlador
     */
    public VentanaControlador() {
        initComponents();
       
        TabbedPaneUIModificado uiModificado = new TabbedPaneUIModificado();
              
        panelPestanyas.setUI(uiModificado);
        panelPestanyas.setBackground(Color.WHITE);
        AutoCompleteDecorator.decorate(comboBusquedaJugador);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        panelFondo = new javax.swing.JPanel();
        panelLateral = new javax.swing.JPanel();
        botonEquipoLateral = new javax.swing.JButton();
        botonJugadoresLateral = new javax.swing.JButton();
        botonEntrenadoresLateral = new javax.swing.JButton();
        botonLesionesLateral = new javax.swing.JButton();
        etiquetaLogotipo = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        panelSuperior = new javax.swing.JPanel();
        etiquetaRutaPanelSuperior = new javax.swing.JLabel();
        etiquetaTituloPanelSuperio = new javax.swing.JLabel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        panelPestanyas = new javax.swing.JTabbedPane();
        panelEquipos = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaConferenciaEquipos = new javax.swing.JList<>();
        comboSeleccionConferencia = new javax.swing.JComboBox<>();
        panelDetallesEquipo = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        etiquetaModificarEquipo = new javax.swing.JLabel();
        botonModificarEquipo = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        campoCiudadEquipo = new javax.swing.JTextField();
        comboConferenciaEquipo = new javax.swing.JComboBox<>();
        etiquetaConferenciaEquipo = new javax.swing.JLabel();
        comboDivisionEquipo = new javax.swing.JComboBox<>();
        etiquetaNombreEquipo = new javax.swing.JLabel();
        etiquetaCiudadEquipo = new javax.swing.JLabel();
        etiquetaDivisionEquipo = new javax.swing.JLabel();
        campoNombreEquipo = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        panelJugadores = new javax.swing.JPanel();
        etiquetaBusquedaJugadores = new javax.swing.JLabel();
        panelDatosJugadores = new javax.swing.JPanel();
        etiquetaPosicionJugador = new javax.swing.JLabel();
        comboPosicionJugador = new javax.swing.JComboBox<>();
        etiquetaPesoJugador = new javax.swing.JLabel();
        spinnerPesoJugador = new javax.swing.JSpinner();
        campoFormateadoFecha = new javax.swing.JFormattedTextField();
        etiquetaPesoJugador1 = new javax.swing.JLabel();
        comboBusquedaJugador = new javax.swing.JComboBox<>();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        panelFondo.setBackground(new java.awt.Color(255, 255, 255));
        panelFondo.setAlignmentX(0.0F);
        panelFondo.setAlignmentY(0.0F);

        panelLateral.setBackground(new java.awt.Color(0, 67, 140));
        panelLateral.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        botonEquipoLateral.setBackground(new java.awt.Color(218, 26, 50));
        botonEquipoLateral.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        botonEquipoLateral.setForeground(new java.awt.Color(255, 255, 255));
        botonEquipoLateral.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/iconoEquipo.png"))); // NOI18N
        botonEquipoLateral.setText("Equipo");
        botonEquipoLateral.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(218, 26, 50)));
        botonEquipoLateral.setBorderPainted(false);
        botonEquipoLateral.setContentAreaFilled(false);
        botonEquipoLateral.setFocusPainted(false);
        botonEquipoLateral.setIconTextGap(20);
        botonEquipoLateral.setOpaque(true);
        botonEquipoLateral.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                botonEquipoLateralMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                botonEquipoLateralMouseExited(evt);
            }
        });
        botonEquipoLateral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEquipoLateralActionPerformed(evt);
            }
        });
        panelLateral.add(botonEquipoLateral, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 140, 257, 55));

        botonJugadoresLateral.setBackground(new java.awt.Color(0, 67, 140));
        botonJugadoresLateral.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        botonJugadoresLateral.setForeground(new java.awt.Color(255, 255, 255));
        botonJugadoresLateral.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/iconoJugador.png"))); // NOI18N
        botonJugadoresLateral.setText("Jugadores");
        botonJugadoresLateral.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(218, 26, 50)));
        botonJugadoresLateral.setBorderPainted(false);
        botonJugadoresLateral.setContentAreaFilled(false);
        botonJugadoresLateral.setFocusPainted(false);
        botonJugadoresLateral.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                botonJugadoresLateralMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                botonJugadoresLateralMouseExited(evt);
            }
        });
        botonJugadoresLateral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonJugadoresLateralActionPerformed(evt);
            }
        });
        panelLateral.add(botonJugadoresLateral, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 201, 257, 55));

        botonEntrenadoresLateral.setBackground(new java.awt.Color(0, 67, 140));
        botonEntrenadoresLateral.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        botonEntrenadoresLateral.setForeground(new java.awt.Color(255, 255, 255));
        botonEntrenadoresLateral.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/iconoEntrenador.png"))); // NOI18N
        botonEntrenadoresLateral.setText("Entrenadores");
        botonEntrenadoresLateral.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(218, 26, 50)));
        botonEntrenadoresLateral.setBorderPainted(false);
        botonEntrenadoresLateral.setContentAreaFilled(false);
        botonEntrenadoresLateral.setFocusPainted(false);
        botonEntrenadoresLateral.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                botonEntrenadoresLateralMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                botonEntrenadoresLateralMouseExited(evt);
            }
        });
        botonEntrenadoresLateral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEntrenadoresLateralActionPerformed(evt);
            }
        });
        panelLateral.add(botonEntrenadoresLateral, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 262, 257, 55));

        botonLesionesLateral.setBackground(new java.awt.Color(0, 67, 140));
        botonLesionesLateral.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        botonLesionesLateral.setForeground(new java.awt.Color(255, 255, 255));
        botonLesionesLateral.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/iconoLesion.png"))); // NOI18N
        botonLesionesLateral.setText("Lesiones");
        botonLesionesLateral.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(218, 26, 50)));
        botonLesionesLateral.setBorderPainted(false);
        botonLesionesLateral.setContentAreaFilled(false);
        botonLesionesLateral.setFocusPainted(false);
        botonLesionesLateral.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                botonLesionesLateralMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                botonLesionesLateralMouseExited(evt);
            }
        });
        botonLesionesLateral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonLesionesLateralActionPerformed(evt);
            }
        });
        panelLateral.add(botonLesionesLateral, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 323, 257, 55));

        etiquetaLogotipo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/logopequenyo.png"))); // NOI18N
        panelLateral.add(etiquetaLogotipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 40, -1, 79));
        panelLateral.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 240, -1));

        panelSuperior.setBackground(new java.awt.Color(218, 26, 50));

        etiquetaRutaPanelSuperior.setBackground(new java.awt.Color(255, 255, 255));
        etiquetaRutaPanelSuperior.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        etiquetaRutaPanelSuperior.setText("Management\\Equipos");

        etiquetaTituloPanelSuperio.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        etiquetaTituloPanelSuperio.setText("Equipos de la liga");

        javax.swing.GroupLayout panelSuperiorLayout = new javax.swing.GroupLayout(panelSuperior);
        panelSuperior.setLayout(panelSuperiorLayout);
        panelSuperiorLayout.setHorizontalGroup(
            panelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSuperiorLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(panelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(etiquetaRutaPanelSuperior)
                    .addComponent(etiquetaTituloPanelSuperio, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(407, Short.MAX_VALUE))
        );
        panelSuperiorLayout.setVerticalGroup(
            panelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSuperiorLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(etiquetaRutaPanelSuperior)
                .addGap(29, 29, 29)
                .addComponent(etiquetaTituloPanelSuperio)
                .addContainerGap(44, Short.MAX_VALUE))
        );

        panelPestanyas.setBackground(new java.awt.Color(255, 255, 255));
        panelPestanyas.setFocusable(false);

        panelEquipos.setBackground(new java.awt.Color(255, 255, 255));

        listaConferenciaEquipos.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "equipo 1" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listaConferenciaEquipos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listaConferenciaEquipos.setSelectionBackground(new java.awt.Color(218, 26, 50));
        listaConferenciaEquipos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaConferenciaEquiposMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listaConferenciaEquipos);

        comboSeleccionConferencia.setBackground(new java.awt.Color(255, 255, 255));
        comboSeleccionConferencia.setMaximumRowCount(5);
        comboSeleccionConferencia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Este", "Oeste" }));
        comboSeleccionConferencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboSeleccionConferenciaActionPerformed(evt);
            }
        });

        panelDetallesEquipo.setBackground(new java.awt.Color(255, 255, 255));
        panelDetallesEquipo.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos Equipo"));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        etiquetaModificarEquipo.setBackground(new java.awt.Color(255, 255, 255));
        etiquetaModificarEquipo.setForeground(new java.awt.Color(218, 26, 50));
        etiquetaModificarEquipo.setText("* Equipo modificado, almacenar los cambios");

        botonModificarEquipo.setBackground(new java.awt.Color(218, 26, 50));
        botonModificarEquipo.setText("Almacenar Cambios");
        botonModificarEquipo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(218, 26, 50)));
        botonModificarEquipo.setBorderPainted(false);
        botonModificarEquipo.setOpaque(true);
        botonModificarEquipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonModificarEquipoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(botonModificarEquipo, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(etiquetaModificarEquipo)
                        .addGap(25, 25, 25)))
                .addContainerGap(82, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(etiquetaModificarEquipo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonModificarEquipo, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        campoCiudadEquipo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                campoCiudadEquipoKeyTyped(evt);
            }
        });

        comboConferenciaEquipo.setBackground(new java.awt.Color(255, 255, 255));
        comboConferenciaEquipo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboConferenciaEquipoItemStateChanged(evt);
            }
        });
        comboConferenciaEquipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboConferenciaEquipoActionPerformed(evt);
            }
        });

        etiquetaConferenciaEquipo.setText("Conferencia");

        comboDivisionEquipo.setBackground(new java.awt.Color(255, 255, 255));
        comboDivisionEquipo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboDivisionEquipoItemStateChanged(evt);
            }
        });

        etiquetaNombreEquipo.setText("Nombre");

        etiquetaCiudadEquipo.setText("Ciudad");

        etiquetaDivisionEquipo.setText("División");

        campoNombreEquipo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                campoNombreEquipoKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(campoNombreEquipo)
                    .addComponent(campoCiudadEquipo)
                    .addComponent(comboDivisionEquipo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(comboConferenciaEquipo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(etiquetaNombreEquipo, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(etiquetaCiudadEquipo, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(etiquetaDivisionEquipo, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(etiquetaConferenciaEquipo))
                        .addGap(230, 230, 230)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(etiquetaNombreEquipo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoNombreEquipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(etiquetaCiudadEquipo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoCiudadEquipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(etiquetaDivisionEquipo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboDivisionEquipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(etiquetaConferenciaEquipo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboConferenciaEquipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout panelDetallesEquipoLayout = new javax.swing.GroupLayout(panelDetallesEquipo);
        panelDetallesEquipo.setLayout(panelDetallesEquipoLayout);
        panelDetallesEquipoLayout.setHorizontalGroup(
            panelDetallesEquipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDetallesEquipoLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(panelDetallesEquipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelDetallesEquipoLayout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelDetallesEquipoLayout.setVerticalGroup(
            panelDetallesEquipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDetallesEquipoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setText("+");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelEquiposLayout = new javax.swing.GroupLayout(panelEquipos);
        panelEquipos.setLayout(panelEquiposLayout);
        panelEquiposLayout.setHorizontalGroup(
            panelEquiposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEquiposLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelEquiposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 358, Short.MAX_VALUE)
                    .addComponent(comboSeleccionConferencia, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelDetallesEquipo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelEquiposLayout.setVerticalGroup(
            panelEquiposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEquiposLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(panelEquiposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelEquiposLayout.createSequentialGroup()
                        .addComponent(panelDetallesEquipo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap(21, Short.MAX_VALUE))
                    .addGroup(panelEquiposLayout.createSequentialGroup()
                        .addComponent(comboSeleccionConferencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(panelEquiposLayout.createSequentialGroup()
                .addGap(181, 181, 181)
                .addComponent(jButton1)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        panelPestanyas.addTab("tab1", panelEquipos);

        panelJugadores.setBackground(new java.awt.Color(255, 255, 255));

        etiquetaBusquedaJugadores.setBackground(new java.awt.Color(255, 255, 255));
        etiquetaBusquedaJugadores.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/iconoBuscarJugador.png"))); // NOI18N
        etiquetaBusquedaJugadores.setFocusable(false);

        panelDatosJugadores.setBackground(new java.awt.Color(255, 255, 255));
        panelDatosJugadores.setBorder(javax.swing.BorderFactory.createTitledBorder("Ficha del Jugador"));

        etiquetaPosicionJugador.setText("Posición:");

        comboPosicionJugador.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Base", "Escolta", "Alero", "Ala-Pivot", "Pivot" }));

        etiquetaPesoJugador.setText("Peso:");

        spinnerPesoJugador.setModel(new javax.swing.SpinnerNumberModel(175, null, null, 1));

        campoFormateadoFecha.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));
        campoFormateadoFecha.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                campoFormateadoFechaMouseClicked(evt);
            }
        });
        campoFormateadoFecha.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                campoFormateadoFechaPropertyChange(evt);
            }
        });

        etiquetaPesoJugador1.setBackground(new java.awt.Color(255, 255, 255));
        etiquetaPesoJugador1.setText("Fecha:");

        javax.swing.GroupLayout panelDatosJugadoresLayout = new javax.swing.GroupLayout(panelDatosJugadores);
        panelDatosJugadores.setLayout(panelDatosJugadoresLayout);
        panelDatosJugadoresLayout.setHorizontalGroup(
            panelDatosJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDatosJugadoresLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(panelDatosJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelDatosJugadoresLayout.createSequentialGroup()
                        .addComponent(etiquetaPosicionJugador, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboPosicionJugador, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelDatosJugadoresLayout.createSequentialGroup()
                        .addGroup(panelDatosJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(etiquetaPesoJugador, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(etiquetaPesoJugador1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelDatosJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(campoFormateadoFecha)
                            .addComponent(spinnerPesoJugador))))
                .addContainerGap(521, Short.MAX_VALUE))
        );
        panelDatosJugadoresLayout.setVerticalGroup(
            panelDatosJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDatosJugadoresLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(panelDatosJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etiquetaPosicionJugador)
                    .addComponent(comboPosicionJugador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(panelDatosJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etiquetaPesoJugador)
                    .addComponent(spinnerPesoJugador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(panelDatosJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etiquetaPesoJugador1)
                    .addComponent(campoFormateadoFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(183, Short.MAX_VALUE))
        );

        comboBusquedaJugador.setBackground(new java.awt.Color(255, 255, 255));
        comboBusquedaJugador.setEditable(true);
        comboBusquedaJugador.setToolTipText("Seleccione el jugador que desea mostrar");
        comboBusquedaJugador.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(218, 26, 50)));
        comboBusquedaJugador.setOpaque(true);
        comboBusquedaJugador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBusquedaJugadorActionPerformed(evt);
            }
        });
        comboBusquedaJugador.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                comboBusquedaJugadorPropertyChange(evt);
            }
        });

        javax.swing.GroupLayout panelJugadoresLayout = new javax.swing.GroupLayout(panelJugadores);
        panelJugadores.setLayout(panelJugadoresLayout);
        panelJugadoresLayout.setHorizontalGroup(
            panelJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelJugadoresLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(panelJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelDatosJugadores, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelJugadoresLayout.createSequentialGroup()
                        .addComponent(etiquetaBusquedaJugadores)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboBusquedaJugador, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelJugadoresLayout.setVerticalGroup(
            panelJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelJugadoresLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(panelJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(etiquetaBusquedaJugadores, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                    .addComponent(comboBusquedaJugador))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelDatosJugadores, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        panelPestanyas.addTab("tab2", panelJugadores);

        jLayeredPane1.setLayer(panelPestanyas, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addComponent(panelPestanyas, javax.swing.GroupLayout.PREFERRED_SIZE, 871, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 372, Short.MAX_VALUE))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPestanyas)
        );

        javax.swing.GroupLayout panelFondoLayout = new javax.swing.GroupLayout(panelFondo);
        panelFondo.setLayout(panelFondoLayout);
        panelFondoLayout.setHorizontalGroup(
            panelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFondoLayout.createSequentialGroup()
                .addComponent(panelLateral, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panelSuperior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelFondoLayout.setVerticalGroup(
            panelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelLateral, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(panelFondoLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(panelSuperior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLayeredPane1)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelFondo, javax.swing.GroupLayout.PREFERRED_SIZE, 1151, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelFondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonEquipoLateralMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonEquipoLateralMouseEntered
        // TODO add your handling code here:
        //botonEquipoLateral.setBackground(Color.decode("#da1a32"));
        botonEquipoLateral.setBorderPainted(true);
    }//GEN-LAST:event_botonEquipoLateralMouseEntered

    private void botonEquipoLateralMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonEquipoLateralMouseExited
        // TODO add your handling code here:
        botonEquipoLateral.setBorderPainted(false);
    }//GEN-LAST:event_botonEquipoLateralMouseExited

    private void botonEquipoLateralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEquipoLateralActionPerformed
        // TODO add your handling code here:
        botonEquipoLateral.setOpaque(true);
        botonEquipoLateral.setBackground(colorRojo);
        botonJugadoresLateral.setBackground(colorAzul);
        botonEntrenadoresLateral.setBackground(colorAzul);
        botonLesionesLateral.setBackground(colorAzul);
        
        panelPestanyas.setSelectedComponent(panelEquipos);
        etiquetaRutaPanelSuperior.setText("Management\\Equipos");
        etiquetaTituloPanelSuperio.setText("Equipos de la liga");
        
    }//GEN-LAST:event_botonEquipoLateralActionPerformed

    private void botonJugadoresLateralMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonJugadoresLateralMouseEntered
        // TODO add your handling code here:
        botonJugadoresLateral.setBorderPainted(true);
    }//GEN-LAST:event_botonJugadoresLateralMouseEntered

    private void botonJugadoresLateralMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonJugadoresLateralMouseExited
        // TODO add your handling code here:
        botonJugadoresLateral.setBorderPainted(false);
    }//GEN-LAST:event_botonJugadoresLateralMouseExited

    private void botonJugadoresLateralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonJugadoresLateralActionPerformed
        // TODO add your handling code here:
        botonJugadoresLateral.setOpaque(true);
        botonJugadoresLateral.setBackground(colorRojo);
        botonEquipoLateral.setBackground(colorAzul);
        botonEntrenadoresLateral.setBackground(colorAzul);
        botonLesionesLateral.setBackground(colorAzul);
        
        panelPestanyas.setSelectedComponent(panelJugadores);
        
        etiquetaRutaPanelSuperior.setText("Management\\Jugadores");
        etiquetaTituloPanelSuperio.setText("Jugadores por equipos");
        
        
    }//GEN-LAST:event_botonJugadoresLateralActionPerformed

    private void botonEntrenadoresLateralMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonEntrenadoresLateralMouseEntered
        // TODO add your handling code here:
        botonEntrenadoresLateral.setBorderPainted(true);
    }//GEN-LAST:event_botonEntrenadoresLateralMouseEntered

    private void botonEntrenadoresLateralMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonEntrenadoresLateralMouseExited
        // TODO add your handling code here:
        botonEntrenadoresLateral.setBorderPainted(false);
    }//GEN-LAST:event_botonEntrenadoresLateralMouseExited

    private void botonEntrenadoresLateralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEntrenadoresLateralActionPerformed
        // TODO add your handling code here:
        botonEntrenadoresLateral.setOpaque(true);
        botonJugadoresLateral.setBackground(colorAzul);
        botonEquipoLateral.setBackground(colorAzul);
        botonEntrenadoresLateral.setBackground(colorRojo);
        botonLesionesLateral.setBackground(colorAzul);
    }//GEN-LAST:event_botonEntrenadoresLateralActionPerformed

    private void botonLesionesLateralMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonLesionesLateralMouseEntered
        // TODO add your handling code here:
        botonLesionesLateral.setBorderPainted(true);
    }//GEN-LAST:event_botonLesionesLateralMouseEntered

    private void botonLesionesLateralMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonLesionesLateralMouseExited
        // TODO add your handling code here:
        botonLesionesLateral.setBorderPainted(false);
    }//GEN-LAST:event_botonLesionesLateralMouseExited

    private void botonLesionesLateralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonLesionesLateralActionPerformed
        // TODO add your handling code here:
        botonLesionesLateral.setOpaque(true);
        botonJugadoresLateral.setBackground(colorAzul);
        botonEquipoLateral.setBackground(colorAzul);
        botonEntrenadoresLateral.setBackground(colorAzul);
        botonLesionesLateral.setBackground(colorRojo);
    }//GEN-LAST:event_botonLesionesLateralActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        
        //Desactivar las opciones de actualización
        
        campoCiudadEquipo.setText("");
        campoNombreEquipo.setText("");
        comboDivisionEquipo.setSelectedIndex(-1);
        
        botonModificarEquipo.setVisible(false);
        etiquetaModificarEquipo.setVisible(false);
        
        //Cargamos las conferencias almacenadas en la BD dentro del comboBox de conferencias
        
        DefaultComboBoxModel modeloCombo = new DefaultComboBoxModel();
        DefaultComboBoxModel modeloConferenciasEquipo = new DefaultComboBoxModel();
        modeloCombo.addAll(modelo.getConferencias());
        modeloConferenciasEquipo.addAll(modelo.getConferencias());
        comboSeleccionConferencia.setModel(modeloCombo);
        
        comboSeleccionConferencia.setSelectedIndex(1);
        
        
        
        DefaultListModel modeloLista = new DefaultListModel();
        for (Equipo e: modelo.getEquiposConferencia(comboSeleccionConferencia.getSelectedItem().toString())){
            modeloLista.addElement(e.getNombre());
        }
        
        listaConferenciaEquipos.setModel(modeloLista);
        
        
        //Cargamos los datos de las conferencias y divisiones
        
        comboConferenciaEquipo.setModel(modeloConferenciasEquipo);
        
        
        //Cargamos los datos de lo jugadores
        
        DefaultComboBoxModel comboJugadores = new DefaultComboBoxModel();
        comboJugadores.addElement("Seleccione el jugador a mostrar");
        
        for( Jugador j: modelo.getTodosLosJugadores()){
           comboJugadores.addElement(j.getNombre());
        }
       
        comboBusquedaJugador.setModel(comboJugadores);
               
    }//GEN-LAST:event_formComponentShown

    private void comboSeleccionConferenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboSeleccionConferenciaActionPerformed
        // TODO add your handling code here:
        DefaultListModel modeloLista = new DefaultListModel();
        for (Equipo e: modelo.getEquiposConferencia(comboSeleccionConferencia.getSelectedItem().toString())){
            modeloLista.addElement(e.getNombre());
        }
        
        listaConferenciaEquipos.setModel(modeloLista);
    }//GEN-LAST:event_comboSeleccionConferenciaActionPerformed

    private void listaConferenciaEquiposMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaConferenciaEquiposMouseClicked
        // TODO add your handling code here:
        cargarDatosEquipo(listaConferenciaEquipos.getSelectedValue());
    }//GEN-LAST:event_listaConferenciaEquiposMouseClicked

    private void comboConferenciaEquipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboConferenciaEquipoActionPerformed
        // TODO add your handling code here:
        if(comboConferenciaEquipo.getSelectedItem().equals("Oeste")){
            DefaultComboBoxModel modeloCombo = new DefaultComboBoxModel();
            modeloCombo.addAll(modelo.getDivisionesOeste());
            comboDivisionEquipo.setModel(modeloCombo);
        }else{
            DefaultComboBoxModel modeloCombo = new DefaultComboBoxModel();
            modeloCombo.addAll(modelo.getDivisionesEste());
            comboDivisionEquipo.setModel(modeloCombo);
        }
        
        
    }//GEN-LAST:event_comboConferenciaEquipoActionPerformed

    private void comboDivisionEquipoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboDivisionEquipoItemStateChanged
        // TODO add your handling code here:
        etiquetaModificarEquipo.setVisible(true);
        botonModificarEquipo.setVisible(true);
        
    }//GEN-LAST:event_comboDivisionEquipoItemStateChanged

    private void comboConferenciaEquipoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboConferenciaEquipoItemStateChanged
        // TODO add your handling code here:
        etiquetaModificarEquipo.setVisible(true);
        botonModificarEquipo.setVisible(true);
        
        
    }//GEN-LAST:event_comboConferenciaEquipoItemStateChanged

    private void botonModificarEquipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonModificarEquipoActionPerformed
        // TODO add your handling code here:
        
        equipoSeleccionadoActual.setCiudad(campoCiudadEquipo.getText());
        equipoSeleccionadoActual.setNombre(campoNombreEquipo.getText());
        equipoSeleccionadoActual.setConferencia(comboConferenciaEquipo.getSelectedItem().toString());
        equipoSeleccionadoActual.setDivision(comboDivisionEquipo.getSelectedItem().toString());
        try {
            modelo.updateEquipo(equipoSeleccionadoActual);
        } catch (DAOEquipoExcepcion ex) {
            JOptionPane.showMessageDialog(this, "Error: "+ex.getMessage());
        }
        this.formComponentShown(new ComponentEvent(this, 1));
        
        
    }//GEN-LAST:event_botonModificarEquipoActionPerformed

    private void comboBusquedaJugadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBusquedaJugadorActionPerformed
        // TODO add your handling code here:
        comboBusquedaJugador.removeItem("Seleccione el jugador a mostrar");
        Set<Jugador> jugador = modelo.getJugador(comboBusquedaJugador.getSelectedItem().toString());
        if (!jugador.isEmpty()){
            cargarDatosJugador(jugador.iterator().next());
        }
        
    }//GEN-LAST:event_comboBusquedaJugadorActionPerformed

    private void campoFormateadoFechaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_campoFormateadoFechaMouseClicked
        // TODO add your handling code here:
        JXDatePicker calendario = new JXDatePicker();
        calendario.setVisible(true);
        if (evt.getClickCount()==2){
            
            calendario.setVisible(true);
        }
    }//GEN-LAST:event_campoFormateadoFechaMouseClicked

    private void campoFormateadoFechaPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_campoFormateadoFechaPropertyChange
        // TODO add your handling code here:
        etiquetaModificarEquipo.setVisible(true);
        botonModificarEquipo.setVisible(true);
    }//GEN-LAST:event_campoFormateadoFechaPropertyChange

    private void comboBusquedaJugadorPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_comboBusquedaJugadorPropertyChange
        // TODO add your handling code here:
        System.out.println("Ha cambiado una propiedad "+evt.getPropertyName());
        if (evt.getPropertyName().equals("selectedIndex")){
            System.out.println("Se ha modificado el elemento seleccionado");
        }
    }//GEN-LAST:event_comboBusquedaJugadorPropertyChange

    private void campoNombreEquipoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoNombreEquipoKeyTyped
        // TODO add your handling code here:
        etiquetaModificarEquipo.setVisible(true);
        botonModificarEquipo.setVisible(true);
    }//GEN-LAST:event_campoNombreEquipoKeyTyped

    private void campoCiudadEquipoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoCiudadEquipoKeyTyped
        // TODO add your handling code here:
        etiquetaModificarEquipo.setVisible(true);
        botonModificarEquipo.setVisible(true);
    }//GEN-LAST:event_campoCiudadEquipoKeyTyped

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        try {
            // TODO add your handling code here:
            modelo.cerraConexionHibernate();
        } catch (DAOConexionExcepcion ex) {
            System.err.println("No se ha podido cerrar la conexión correctamente");
        }
    }//GEN-LAST:event_formWindowClosed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        InsercionEquipos ventanaEquipo = new InsercionEquipos();
        ventanaEquipo.addWindowListener(this);
        ventanaEquipo.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaControlador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaControlador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaControlador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaControlador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaControlador().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonEntrenadoresLateral;
    private javax.swing.JButton botonEquipoLateral;
    private javax.swing.JButton botonJugadoresLateral;
    private javax.swing.JButton botonLesionesLateral;
    private javax.swing.JButton botonModificarEquipo;
    private javax.swing.JTextField campoCiudadEquipo;
    private javax.swing.JFormattedTextField campoFormateadoFecha;
    private javax.swing.JTextField campoNombreEquipo;
    private javax.swing.JComboBox<String> comboBusquedaJugador;
    private javax.swing.JComboBox<String> comboConferenciaEquipo;
    private javax.swing.JComboBox<String> comboDivisionEquipo;
    private javax.swing.JComboBox<String> comboPosicionJugador;
    private javax.swing.JComboBox<String> comboSeleccionConferencia;
    private javax.swing.JLabel etiquetaBusquedaJugadores;
    private javax.swing.JLabel etiquetaCiudadEquipo;
    private javax.swing.JLabel etiquetaConferenciaEquipo;
    private javax.swing.JLabel etiquetaDivisionEquipo;
    private javax.swing.JLabel etiquetaLogotipo;
    private javax.swing.JLabel etiquetaModificarEquipo;
    private javax.swing.JLabel etiquetaNombreEquipo;
    private javax.swing.JLabel etiquetaPesoJugador;
    private javax.swing.JLabel etiquetaPesoJugador1;
    private javax.swing.JLabel etiquetaPosicionJugador;
    private javax.swing.JLabel etiquetaRutaPanelSuperior;
    private javax.swing.JLabel etiquetaTituloPanelSuperio;
    private javax.swing.JButton jButton1;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JList<String> listaConferenciaEquipos;
    private javax.swing.JPanel panelDatosJugadores;
    private javax.swing.JPanel panelDetallesEquipo;
    private javax.swing.JPanel panelEquipos;
    private javax.swing.JPanel panelFondo;
    private javax.swing.JPanel panelJugadores;
    private javax.swing.JPanel panelLateral;
    private javax.swing.JTabbedPane panelPestanyas;
    private javax.swing.JPanel panelSuperior;
    private javax.swing.JSpinner spinnerPesoJugador;
    // End of variables declaration//GEN-END:variables
    private static final Color colorRojo = Color.decode("#da1a32");
    private static final Color colorAzul = Color.decode("#00438c");
    private boolean mostrarEncabezado = false;
    
    private DAOImplementacionHibernate modelo = new DAOImplementacionHibernate();
    
    private Equipo equipoSeleccionadoActual;
    private boolean insercion = false;
    
    private JXDatePicker calendario;
    

    //Funciones auxiliares
    
    private void cargarDatosEquipo(String nombreEquipo){
        
        
        
        Equipo e= modelo.getEquipoPorNombre(nombreEquipo);
        equipoSeleccionadoActual=e;
        TitledBorder bordepanel = new TitledBorder("Datos "+e.getCiudad()+" "+e.getNombre());
        panelDetallesEquipo.setBorder(bordepanel);
        
        campoNombreEquipo.setText(e.getNombre());
        campoCiudadEquipo.setText(e.getCiudad());
        comboConferenciaEquipo.setSelectedItem(e.getConferencia());
        
        if(e.getConferencia().equals("Oeste")){
            DefaultComboBoxModel modeloCombo = new DefaultComboBoxModel();
            modeloCombo.addAll(modelo.getDivisionesOeste());
            comboDivisionEquipo.setModel(modeloCombo);
        }else{
            DefaultComboBoxModel modeloCombo = new DefaultComboBoxModel();
            modeloCombo.addAll(modelo.getDivisionesEste());
            comboDivisionEquipo.setModel(modeloCombo);
        }
        
        comboDivisionEquipo.setSelectedItem(e.getDivision());
        etiquetaModificarEquipo.setVisible(false);
        botonModificarEquipo.setVisible(false);
        
    }
    
    private Equipo crearDatosEquipoConCampos(){
        if(insercion){
            return new Equipo(modelo.getIdInsertarEquipo(),campoNombreEquipo.getText(),campoCiudadEquipo.getText(),(String)comboDivisionEquipo.getSelectedItem(),(String)comboConferenciaEquipo.getSelectedItem(),equipoSeleccionadoActual.getEntrenador(),equipoSeleccionadoActual.getJugadores());
        }else{
            return new Equipo(equipoSeleccionadoActual.getId(),campoNombreEquipo.getText(),campoCiudadEquipo.getText(),(String)comboDivisionEquipo.getSelectedItem(),(String)comboConferenciaEquipo.getSelectedItem(),equipoSeleccionadoActual.getEntrenador(),equipoSeleccionadoActual.getJugadores());
        }
        
    }
    
    private void cargarDatosJugador(Jugador j){
        comboPosicionJugador.setSelectedIndex(j.getPosicion());
        spinnerPesoJugador.setValue(j.getPeso());
        
        campoFormateadoFecha.setValue(java.util.Date.from(j.getFecha_nac().atStartOfDay()
      .atZone(ZoneId.systemDefault())
      .toInstant()));
        
        
    }

    @Override
    public void windowOpened(WindowEvent e) {
    }

    @Override
    public void windowClosing(WindowEvent e) {

    }

    @Override
    public void windowClosed(WindowEvent e) {
        formComponentShown(new java.awt.event.ComponentEvent(this, 1));
    }

    @Override
    public void windowIconified(WindowEvent e) {
    }

    @Override
    public void windowDeiconified(WindowEvent e) {
    }

    @Override
    public void windowActivated(WindowEvent e) {
    }

    @Override
    public void windowDeactivated(WindowEvent e) {
    }
}
